[tool.pytest.ini_options]
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"
addopts = "--cov --cov-config=pyproject.toml --cov-branch --cov-report term:skip-covered"


[tool.coverage.run]
branch = true
source = ["questionpy", "questionpy_sdk"]


[tool.pylint]

[tool.pylint.MAIN]

extension-pkg-allow-list = "pydantic"
# pylint_pytest removes some false positives when checking tests
load-plugins = "pylint_pytest"

fail-on = ["E", "F"]
fail-under = 8

[tool.pylint.BASIC]
# Allow these well-known names despite usual naming conventions
good-names = ["i", "j", "k", "e", "ex", "_"]
# Allow any name for test methods
function-rgx = "^test_.+|[a-z0-9_]+$"

[tool.pylint.CLASSES]
valid-metaclass-classmethod-first-arg = "mcs"

[tool.pylint.REPORTS]
output-format = "colorized"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-module-docstring", "missing-class-docstring", "missing-function-docstring",
    "unused-wildcard-import"
]
enable = ""

[tool.pylint.FORMAT]

expected-line-ending-format = "LF"
indent-after-paren = 4
indent-string = "    "
max-line-length = 120

[tool.pylint.IMPORTS]

allow-wildcard-with-all = true


[tool.mypy]
plugins = "pydantic.mypy"
disallow_untyped_defs = true
strict_optional = true
show_error_codes = true
